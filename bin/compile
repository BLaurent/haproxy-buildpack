#!/bin/sh

BUILD_DIR=$1
CACHE_DIR=$2
VERSION_DIR=`cd $(dirname $0); cd ..; pwd`
VERSION=`cat $VERSION_DIR/VERSION | sed 's/[\r\n]*$//'`
ARCHIVE=`basename $VERSION`
ARCHIVE_DIR=`echo $ARCHIVE | sed 's/\.tar\.gz$//'`

get_source() {
  if [ ! -d $CACHE_DIR ]; then
    echo "Creating $CACHE_DIR"
    mkdir $CACHE_DIR || exit 1
  fi

  if [ -e $CACHE_DIR/$ARCHIVE ]; then
    echo "Don't need to download, already exists"
  else
    echo "Downloading $VERSION..."
    curl -sSL $VERSION -o $CACHE_DIR/$ARCHIVE || exit 2
  fi
}

unpack_source() {
  if [ ! -d $CACHE_DIR/$ARCHIVE_DIR ]; then
    echo "Unpacking..."
    `tar xzf $CACHE_DIR/$ARCHIVE -C $CACHE_DIR` || exit 3
  fi
}

compile_source() {
  unpack_source
  if [ ! -f $CACHE_DIR/$ARCHIVE_DIR/haproxy ]; then
    echo "Compiling $ARCHIVE_DIR..."
    cd $CACHE_DIR/$ARCHIVE_DIR || exit 4
    make --silent -j TARGET=linux2628 USE_STATIC_PCRE=1  || exit 5
  fi
}

vendor_bin() {
  cp $CACHE_DIR/$ARCHIVE_DIR/haproxy $BUILD_DIR/haproxy || exit 6
  cp $VERSION_DIR/conf/start_haproxy.sh $BUILD_DIR/start_haproxy.sh || exit 7
  cp $VERSION_DIR/conf/haproxy.cfg $BUILD_DIR/haproxy.cfg || exit 8
  cd $BUILD_DIR || exit 9
  sh $BUILD_DIR/start_haproxy.sh
#  cp $(dirname $0)/../conf/start_haproxy.sh $BUILD_DIR/start_haproxy.sh || exit 7
}

get_source
compile_source
vendor_bin

echo "-----> Done."

exit 0